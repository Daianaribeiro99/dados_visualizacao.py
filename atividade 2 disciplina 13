import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# PARTE 1 - Manipulação de Dados Meteorológicos

data = {
    "Data": ["15/01/2025"] * 5,
    "Cidade": ["São Paulo", "Rio de Janeiro", "Curitiba", "Porto Alegre", "Salvador"],
    "Temperatura Máxima (°C)": [30.5, 35.0, 24.0, 28.0, 31.0],
    "Temperatura Mínima (°C)": [22.0, 25.0, 18.0, 20.0, 24.5],
    "Precipitação (mm)": [12.0, np.nan, 8.0, 15.0, np.nan],
    "Umidade Relativa (%)": [78, 70, np.nan, 82, 80]
}

df = pd.DataFrame(data)

# Substituir valores ausentes
precipitacao_media = df["Precipitação (mm)"].mean()
umidade_mediana = df["Umidade Relativa (%)"].median()
df["Precipitação (mm)"].fillna(precipitacao_media, inplace=True)
df["Umidade Relativa (%)"].fillna(umidade_mediana, inplace=True)

# Criar coluna Amplitude Térmica
df["Amplitude Térmica"] = df["Temperatura Máxima (°C)"] - df["Temperatura Mínima (°C)"]

# Filtrar cidades com temperatura máxima acima de 30°C
df_filtrado = df[df["Temperatura Máxima (°C)"] > 30]

# Reordenar colunas
colunas_ordenadas = ["Data", "Cidade", "Temperatura Máxima (°C)", "Temperatura Mínima (°C)", "Amplitude Térmica", "Precipitação (mm)", "Umidade Relativa (%)"]
df_filtrado = df_filtrado[colunas_ordenadas]

print("DataFrame processado:\n", df_filtrado)

# PARTE 2 - Gráfico de evolução da temperatura ao longo do dia

horas = list(range(25))  # De 0h a 24h
temperaturas = [15 + (i/12)*15 if i <= 12 else 30 - ((i-12)/12)*12 for i in horas]

plt.figure(figsize=(10,5))
plt.plot(horas, temperaturas, marker='o', linestyle='-', color='b', label='Temperatura')
plt.title("Evolução da Temperatura ao longo do dia")
plt.xlabel("Hora do dia")
plt.ylabel("Temperatura (°C)")
plt.xticks(range(0, 25, 2))
plt.grid(True)
plt.legend()
plt.show()

# PARTE 3 - Análise de vendas com Seaborn

dados_vendas = {
    "Dia": ["Seg", "Ter", "Qua", "Qui", "Sex", "Sáb", "Dom"],
    "Vendas Totais": [2000, 2500, 1800, 2200, 2700, 3000, 3200],
    "Número de Clientes": [150, 180, 140, 160, 190, 220, 230],
    "Lucro": [500, 600, 450, 550, 700, 850, 900]
}

df_vendas = pd.DataFrame(dados_vendas)

# Gráfico de barras - Total de vendas por dia
plt.figure(figsize=(8,5))
sns.barplot(x="Dia", y="Vendas Totais", data=df_vendas, palette="coolwarm")
plt.title("Total de Vendas por Dia")
plt.xlabel("Dia da Semana")
plt.ylabel("Vendas Totais (R$)")
plt.show()

# Gráfico de dispersão - Número de Clientes vs. Vendas Totais
plt.figure(figsize=(8,5))
sns.scatterplot(x="Número de Clientes", y="Vendas Totais", data=df_vendas, color='g')
plt.title("Relação entre Número de Clientes e Vendas Totais")
plt.xlabel("Número de Clientes")
plt.ylabel("Vendas Totais (R$)")
plt.show()

# Heatmap de correlação
plt.figure(figsize=(6,4))
sns.heatmap(df_vendas.corr(), annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Matriz de Correlação das Variáveis")
plt.show()
